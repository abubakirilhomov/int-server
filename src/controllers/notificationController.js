const webpush = require("web-push");
const NotificationSubscription = require("../models/notificationModel");

webpush.setVapidDetails(
  "mailto:test@example.com",
  process.env.VAPID_PUBLIC_KEY,
  process.env.VAPID_PRIVATE_KEY,
  "https://mentors-mars.uz"
);

// üì© –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞
const subscribeUser = async (req, res) => {
  try {
    const { subscription, userId, userType } = req.body;

    await NotificationSubscription.findOneAndUpdate(
      { userId, userType },
      {
        endpoint: subscription.endpoint,
        keys: subscription.keys,
      },
      { upsert: true, new: true }
    );

    res.status(201).json({ success: true });
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏:", err);
    res.status(500).json({ success: false, message: err.message });
  }
};

// üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
const sendNotificationToUser = async (userId, userType, title, body) => {
  try {
    const subscription = await NotificationSubscription.findOne({ userId, userType });
    if (!subscription) {
      console.log(`‚ùå –ù–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è ${userType} ${userId}`);
      return;
    }

    const payload = JSON.stringify({ title, body });

    await webpush.sendNotification(subscription, payload);
    console.log(`üì® –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`);
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:", err.message);
  }
};

module.exports = {
  subscribeUser,
  sendNotificationToUser,
};
